:root{
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}
/* in this body tag, I set the body to the full width and height of the window. I use Flex here, with the column direction, so the Navbar renders above the main section in an easy way
 This is also where i set the background to this peachy orange theme */
body{
    min-height: 100vh;
    margin: 0px;
    padding: 0px;
    background: radial-gradient(circle, rgba(237,136,136,1), rgba(255,221,178,1));
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* I use this main section to house the main content in each page, this is all decorative */
main{
    min-height: 800px;
    margin-top: 20px;
    background-color: rgba(255, 252, 248, 0.651);
    max-width: 1200px;
    border-radius: 4px;
    height: 100%;
    box-shadow: 0px 0px 4px 4px rgba(252, 197, 172, 0.822);
    padding: 5px;
}
/* This sets the navbar's height, and styles, as well as adding a slow animation, scaling the background by 300%, then moving it along the x axis to provide the illusion of motion*/
nav{
    margin: 0px;
    width: 100%;
    height: 70px;
    background-color: rgb(37, 15, 15);
    animation: rainbow 20s infinite;
    background: radial-gradient(circle, rgb(90, 41, 180), rgb(47, 132, 230));
    background-size: 300% 100%;
}
/* getting rid of native styling on the list, and the links in the navbar */
ul, li, a{
    color: aliceblue;
    text-decoration: none;
    transition: all 300ms;
    border-radius: 3px;
}
ul{
    list-style-type: none;
    display: flex;
    gap: 5%;
    margin: 0px;
    align-items:center;
    height: 100%;
}
/* fancy (lol) hover fx */
li a:hover{
    font-size: larger;
    height: 100%;
    padding: 5px;
    background-color: aliceblue;
    color: black;
}



/* all decorationand hover effects for the table */
table{
    min-width: 500px;
    background-color: #f0272736;
    border-radius: 4px;
    margin: auto;
    text-align: center;
    transition: all 300ms;
    box-shadow: 0px 0px 4px 0px rgb(0, 0, 0);
}
table:hover{
    box-shadow: 0px 0px 4px 0px rgb(238, 235, 235);
}

th, td{
    border-radius: 4px;
    width: 100px;
    padding: 5px;
    margin: 5px;
    transition: all 300ms;
}


th:hover, td:hover{
    background-color: #f1d6d6;
}

/* this dreadful effect slowly grows the text. It's kinda fun, but totally useless */
.texpanding{
    transition: font-size 20000ms;
}
.texpanding:hover{
font-size: xx-large;
}
/* this is kinda fun. creating the gradient colored text, by setting the Div's clip map to the text's shape, setting the background color on the div, and setting the text to transparent 
so that the background shines through. This is where I first implemented the rainbow animation, which I then added everywhere*/
#rainbowheader:hover{
    background: linear-gradient(to right, #e65d5d, #d4c066, #eb6683, #ab5cec, #ca5555, #f75f44);
    background-clip: content-box;
    -webkit-background-clip: text;
    color: transparent;
    background-size: 200% 100%;
    animation: rainbow 4s infinite;
}
/* animation vertically centers background while moving it(already over-scaled) across the x axis */
@keyframes rainbow {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  /* form css involves unstyling prestyled componenets, and adding some little touches for visual stuff */
  form{
    display: grid;
    background-color: #d66161bd;
    padding: 20px;
    margin: auto;
    border-radius: 5px;
    
    input{
        appearance: none;
        background-color: #f3ead0;
        border: none;
        height: 30px;
        border-radius: 5px;

    }
  }
  .bottommargin{
    margin-bottom: 10px;
  }
  /* this button looks okay, i use the focus tag to ensure it can look pretty even if youre tabbing to it rather than hovering */
  .button{
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    margin: 0;
    padding: 0; 
    background: radial-gradient(circle, rgba(237,136,136,1), rgba(255,221,178,1));
    background-size: 200% 100%;
    transition: all 200ms;
    border: thin solid black; 
    cursor: pointer; 
    animation: rainbow 4s infinite;
}
.button:hover{
    color: aliceblue;
    font-weight: 600;
    animation: rainbow 2s infinite;
    background: radial-gradient(circle, rgb(90, 41, 180), rgb(47, 132, 230));
    background-size: 300% 100%;
}

.button:focus{
    color: aliceblue;
    font-weight: 600;
    animation: rainbow 2s infinite;
    background: radial-gradient(circle, rgb(90, 41, 180), rgb(47, 132, 230));
}


/* setting the transition here for my card effect. Position absolute ensures the cards stack on each other */
img{
    border-radius: 5px;
    border: thin black solid;
    position: absolute;
    transition: all 300ms;
    box-shadow: 0px 0px 20px 1px black;
}


/* Here, i'm styling this div, which contains my image cards and making it flex for the sole purpose of centering it 
this div is there so that when hovered, it's children can be affected using the css below*/
.photoParent{
    position: relative;
    display: flex;
    justify-content: center;
    margin-top: 50px;
}

/* move one image left*/
.photoParent .left{
    transform: rotate(-2deg) translate(-15px, 0px);
}
/* the other right */
.photoParent .right{
    transform: rotate(3deg) translate(15px, 0px);
}
/* left image moves more left, revealing itself from underneath the middle image, which needed no unique css */
.photoParent:hover .left{
    transform: translateX(-250px);
}
/* right image moves more right */
.photoParent:hover .right{
    transform: translateX(250px);
}
/* shadow turns white to to draw attention */
.photoParent:hover img{
    box-shadow: 0px 0px 20px 1px rgb(255, 255, 255);
    z-index: 100;
}

#redder{
    color: #200707;
}